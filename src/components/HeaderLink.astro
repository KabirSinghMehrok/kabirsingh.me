---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a"> & {
  linkType: string;
  fontSize: string;
};

const {
  href,
  class: className,
  fontSize = "18px",
  linkType = "internal",
  ...props
} = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, "");
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === "/" + (subpath?.[0] || "");
---

<a
  href={href}
  class="relative inline-flex flex-row items-center text-[16px] md:text-[18px] font-sans py-0"
  class:list={[className, { active: isActive }]}
  target={linkType === "external" ? "_blank" : undefined}
  rel={linkType === "external" ? "noopener noreferrer" : undefined}
  {...props}
>
  <slot />
  {
    linkType === "external" && (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        height="1em"
        viewBox="0 -960 960 960"
        width="1em"
        fill="currentColor"
      >
        <path d="m256-240-56-56 384-384H240v-80h480v480h-80v-344L256-240Z" />
      </svg>
    )
  }
</a>
<style>
  a {
    text-decoration: none;
    position: relative;
  }
  a::after {
    content: "";
    position: absolute;
    width: 0;
    height: 1px;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    background-color: currentColor;
    transition: width 0.1s ease-in-out;
  }
  a:hover::after {
    width: 100%;
  }
  a.active {
    font-weight: bolder;
  }
</style>
