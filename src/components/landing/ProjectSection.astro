---
import Project from "./Project.astro";
import ProjectModal from "./ProjectModal.astro";
const project = await Astro.glob("../../data/projects/*.md");
---

<div class="flex flex-col">
  <h2 class="text-[40px] source-serif-4-super-light leading-none mb-4">
    ...and on some amazing projects
  </h2>
  {
    project
      .filter((exp) => !exp.frontmatter?.isHidden)
      .map((exp, idx) => (
        <>
          <Project
            title={exp.frontmatter.title}
            tagline={exp.frontmatter.tagline}
            github_url={exp.frontmatter.github_url}
            live_url={exp.frontmatter.live_url}
            imageUrl={exp.frontmatter.imageUrl}
            status={exp.frontmatter.status}
            technologies={exp.frontmatter.technologies}
            role={exp.frontmatter.role}
            iconEmoji={exp.frontmatter.iconEmoji}
            modalId={`modal-${exp.frontmatter.title}`}
            showUpperBorder={idx !== 0}
            project_image={exp.frontmatter.project_image}
          />
        </>
      ))
  }
</div>

{
  project.map((exp) => (
    <ProjectModal
      modalId={`modal-${exp.frontmatter.title}`}
      title={exp.frontmatter.title}
      tagline={exp.frontmatter.tagline}
      github_url={exp.frontmatter.github_url}
      live_url={exp.frontmatter.live_url}
      imageUrl={exp.frontmatter.imageUrl}
      status={exp.frontmatter.status}
      technologies={exp.frontmatter.technologies}
      role={exp.frontmatter.role}
      iconEmoji={exp.frontmatter.iconEmoji}
      project_image={exp.frontmatter.project_image}
    >
      <exp.Content />
    </ProjectModal>
  ))
}

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Function to open a modal
    const openModal = (modal) => {
      if (modal == null) return;
      modal.classList.add("is-open");
      document.body.style.overflow = "hidden"; // Prevent background scrolling
    };

    // Function to close a modal
    const closeModal = (modal) => {
      if (modal == null) return;
      modal.classList.remove("is-open");
      document.body.style.overflow = "auto"; // Restore scrolling
    };

    // --- Event Listeners ---

    // 1. Open modal
    const openModalTriggers = document.querySelectorAll("[data-modalTrigger]");
    openModalTriggers.forEach((trigger) => {
      trigger.addEventListener("click", (event) => {
        event.preventDefault();
        const modalId = trigger.getAttribute("data-modalTrigger");
        const modal = document.getElementById(modalId);
        openModal(modal);
      });
    });

    // 2. Close modal via the close button
    const closeModalButtons = document.querySelectorAll("[data-modal-close]");
    closeModalButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const modal = button.closest(".modal-overlay");
        closeModal(modal);
      });
    });

    // 3. Close modal by clicking the overlay
    document.querySelectorAll(".modal-overlay").forEach((overlay) => {
      overlay.addEventListener("click", (event) => {
        // Only close if the overlay itself is clicked, not its children
        if (event.target === overlay) {
          closeModal(overlay);
        }
      });
    });

    // 4. Close modal with the 'Escape' key
    document.addEventListener("keydown", (event) => {
      if (event.key === "Escape") {
        const openModal = document.querySelector(".modal-overlay.is-open");
        closeModal(openModal);
      }
    });
  });
</script>
